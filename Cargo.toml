[workspace]
members = [
    "apps/atom-ide",
    "apps/atomd", 
    "apps/atom-ext-host-node",
    "crates/atom-ui",
    "crates/atom-core",
    "crates/atom-ipc",
    "crates/atom-index",
    "crates/atom-lsp",
    "crates/atom-ext-host",
    "crates/atom-atom-compat",
    "crates/atom-plugin",
    "crates/atom-sandbox",
    "crates/atom-ai",
    "crates/atom-settings",
    "crates/atom-persistence",
]
resolver = "2"
rust-version = "1.82.0"

[workspace.package]
version = "1.0.0-alpha.1"
edition = "2021"
rust-version = "1.82.0"
authors = ["Atom IDE Team"]
license = "MIT"
repository = "https://github.com/magray/atom-ide"

# Release profile with LTO optimization
[profile.release]
lto = "thin"
codegen-units = 1
panic = "abort"
strip = true

[workspace.dependencies]
# Core async runtime
tokio = { version = "1.40", features = ["full"] }
serde = { version = "1.0", features = ["derive"] }
bincode = "1.3"

# UI framework (Slint compatible version without edition2024)
slint = { version = "1.5", features = ["backend-winit"] }

# Text processing (unified rope structure)
ropey = "1.6"

# Syntax parsing (tree-sitter 0.25.x, ABI 15 according to CLAUDE.md)
tree-sitter = "0.25"

# Tree-sitter language parsers (ABI 15 compatible versions)
tree-sitter-rust = "0.24"
tree-sitter-javascript = "0.25"
tree-sitter-typescript = "0.23"
tree-sitter-python = "0.23"
tree-sitter-json = "0.24"
# tree-sitter-md = { version = "0.3", features = ["tree-sitter"] } # Disabled due to ABI conflict

# Text shaping and fonts
cosmic-text = "0.14"

# Search and indexing
# Pin Tantivy to a Rust 2021-compatible series to avoid edition2024
tantivy = "0.21"
# ripgrep is invoked as a process (tokio::process); no library binding needed here
# ripgrep = "14.1"

# WASM runtime (Wasmtime stable version compatible with Rust 1.82)
wasmtime = "25.0"

# SQLite persistence
rusqlite = { version = "0.32", features = ["bundled", "serde_json", "backup"] }

# Error handling
thiserror = "2.0"

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
